rules:
  - id: type-confusion-dynamic-casting
    patterns:
      - pattern: |
          if (typeof $VAR1 === "$TYPE1") {
            ...
            $VAR2 = <cast>($VAR3);
            ...
          }
      - pattern-either:
          - pattern: |
              var $VAR2 = <cast>($VAR3)
          - pattern: |
              let $VAR2 = <cast>($VAR3)
          - pattern: |
              const $VAR2 = <cast>($VAR3)
    message: Detected potential type confusion through dynamic casting.
    severity: ERROR
    languages: [javascript]

  - id: type-confusion-unsafe-assignment
    patterns:
      - pattern: |
          if (someCondition) {
            ...
            $VAR1 = $ANY_VAR;
            ...
            $FUNC($VAR1);
          }
    message: Detected potential type confusion due to unsafe assignment followed by a function call.
    severity: ERROR
    languages: [javascript]

  - id: type-confusion-js-in-frameworks
    patterns:
      - pattern-either:
          - pattern: |
              $component.dialog.open({
                title: '...',
                content: $DATA
              });
          - pattern: |
              $element.setAttribute('data-value', $DATA);
          - pattern: |
              $scope.$apply(function($applyData) {
                $scope.someVar = $DATA;
              });
      - metavariable-pattern:
          metavariable: $DATA
          pattern-either:
            - pattern: |
                (Number)$VAR
            - pattern: |
                (String)$VAR
            - pattern: |
                (Boolean)$VAR
    message: Potential type confusion detected in framework-specific method.
    severity: ERROR
    languages: [javascript, typescript]

  - id: type-confusion-implicit-coercion
    patterns:
      - pattern-either:
          - pattern: |
              if (typeof $VAR === "string") {
                $VAR * $anyNumber;
              }
          - pattern: |
              if (typeof $VAR === "number") {
                $VAR + $anyString;
              }
      - pattern-not: |
          $VAR = ...;  // Ensure variable is not explicitly cast to correct type in the following lines.
    message: Type confusion through implicit coercion identified.
    severity: ERROR
    languages: [javascript]